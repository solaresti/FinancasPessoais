@page "/MovimentacaoInvestimento"
@using AppFinancas.Models
@rendermode InteractiveServer
@inject ProtectedSessionStorage sessionStorage
@inject NavigationManager navigationManager
<PageTitle>Lançamentos</PageTitle>

<h2>Seus lançamentos</h2>




<table class="table">


    <style type="text/css">

        table {
            border-spacing: 0px;
        }

        th, td {
            padding: 5px 30px 5px 10px;
            border-spacing: 0px;
            font-size: 100%;
            margin: 0px;
        }

        th, td {
            text-align: left;
            background-color: #e0e9f0;
            border-top: 1px solid #f1f8fe;
            border-bottom: 1px solid #cbd2d8;
            border-right: 1px solid #cbd2d8;
        }

        tr.head th {
            text-transform: uppercase;
            font-size: 90%;
            color: white;
            background-color: gray;
            border-bottom: 2px solid white;
            border-right: 1px solid white;
            border-top: 1px solid white;
            text-align: left;
            letter-spacing: 0.1em;
        }

            tr.head th:first-child {
                -webkit-border-top-left-radius: 5px;
                -moz-border-radius-topleft: 5px;
                border-top-left-radius: 5px;
            }

            tr.head th:last-child {
                -webkit-border-top-right-radius: 5px;
                -moz-border-radius-topright: 5px;
                border-top-right-radius: 5px;
            }

        tr.even {
            background-color: #efefef;
        }

        tr:hover {
            background-color: lightgray;
        }

        .table-money {
            text-align: right;
            font-weight: bold;
        }
    </style>


    <thead>
        <tr class="head">

            <th>Data</th>
            <th>Investimento</th>
            <th>Meta</th>
            <th>Descrição</th>
            <th class="money">Valor</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var lancamento in ListaLancamentos)
        {
            <tr>

                <td>@lancamento.Data.ToString("dd/MM/yyyy")</td>
                <td>@lancamento.NomeInvestimento</td>
                <td>@lancamento.NomeMeta</td>
                <td>@lancamento.Descritivo</td>
                <td class="table-money">@lancamento.Valor.ToString("C")</td>
                <td>
                    <div align="center">
                        <a class="btn btn-outline-secondary" href="MovimentacaoInvestimento/alterar/@lancamento.Id/@lancamento.Valor">Alterar</a>
                        <a class="btn btn-outline-danger" href="MovimentacaoInvestimento/excluir/@lancamento.Id/@lancamento.Valor">Excluir</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>


</table>

<a href="/MovimentacaoInvestimento/incluir" class="btn btn-primary">Criar lançamento</a>
<a href="/" class="btn btn-default">Voltar</a>

<br />

@if (mensagem != string.Empty)
{
    <label class="text text-info">@mensagem</label>
}
@* <p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button> *@

@code {
    /// <summary>
    /// Dados da seção do usuário
    /// </summary>
    SessionModel sessionModel = new SessionModel();

    string mensagem = "Carregando lista de metas...";
    public List<MovimentacaoInvestimentoModel> ListaLancamentos { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        // ---------------------------------------------------------------------------------------
        // Verificando se o login já foi efetuado
        var conteudoSessionStorage = await sessionStorage.GetAsync<SessionModel>("sessionModel");
        if (conteudoSessionStorage.Value == null)
        {
            sessionModel = new SessionModel();
        }
        else
        {
            sessionModel = conteudoSessionStorage.Value;
        }

        if (string.IsNullOrWhiteSpace(sessionModel.Token))
        {
            navigationManager.NavigateTo("/", true);
        }
        // ---------------------------------------------------------------------------------------

        RetornoListaEntidadesModel<MovimentacaoInvestimentoModel> retornoApi = await MovimentacaoInvestimentoService.ObterListaLancamentos(sessionModel.Token);

        if (retornoApi.Codigo == ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            ListaLancamentos = retornoApi.ListaEntidades;
        }

    }

    private void Teste()
    {

        // adsfjsdklfjksdl
    }
}
