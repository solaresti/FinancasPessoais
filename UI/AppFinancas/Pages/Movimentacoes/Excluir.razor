@page "/MovimentacaoInvestimento/excluir/{id:int}/{valor:float}"

@inject NavigationManager Navigation 
@rendermode InteractiveServer 
@inject ProtectedSessionStorage sessionStorage


<PageTitle>Movimentação</PageTitle>

<h1>Confirmação da exclusão</h1>
<h4> Tem certeza de que deseja excluir a movimentação no valor de @Valor.ToString("C")?</h4>

<button class="btn btn-danger" @onclick="ConfirmarExclusao">Excluir</button>
<a onclick="history.back()" class="btn btn-default">Cancelar</a>

<br />
@if (mensagem != string.Empty)
{
    <label class="text text-danger">@mensagem</label>
}

@code {
    /// <summary>
    /// Dados da seção do usuário
    /// </summary>
    SessionModel sessionModel = new SessionModel();

    public string mensagem { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public float Valor { get; set; }



    public async Task ConfirmarExclusao()
    {
        mensagem = "";
        // ---------------------------------------------------------------------------------------
        // Verificando se o login já foi efetuado
        var conteudoSessionStorage = await sessionStorage.GetAsync<SessionModel>("sessionModel");
        if (conteudoSessionStorage.Value == null)
        {
            sessionModel = new SessionModel();
        }
        else
        {
            sessionModel = conteudoSessionStorage.Value;
        }

        if (string.IsNullOrWhiteSpace(sessionModel.Token))
        {
            Navigation.NavigateTo("/", true);
        }
        // ---------------------------------------------------------------------------------------


        var retornoService = await MovimentacaoInvestimentoService.ExcluirMovimentacao(sessionModel.Token, Id);

        if (retornoService.Codigo != ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            mensagem = retornoService.Mensagem;
            return;
        }

        Navigation.NavigateTo("/MovimentacaoInvestimento");
    }
}
