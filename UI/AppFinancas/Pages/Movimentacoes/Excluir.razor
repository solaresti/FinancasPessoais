@page "/movimentacao/excluir/{id:int}/{valor:float}"

@inject NavigationManager Navigation 
@rendermode InteractiveServer 

<PageTitle>Movimentação</PageTitle>

<h1>Confirmação da exclusão</h1>
<h4> Tem certeza de que deseja excluir a movimentação no valor de @Valor.ToString("C")?</h4>

<button class="btn btn-danger" @onclick="ConfirmarExclusao">Excluir</button>
<a onclick="history.back()" class="btn btn-default">Cancelar</a>

<br />
@if (mensagem != string.Empty)
{
    <label class="text text-danger">@mensagem</label>
}

@code {
    public string mensagem { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public float Valor { get; set; }



    public async Task ConfirmarExclusao()
    {
        mensagem = "";
        RequisicaoLoginModel model = new RequisicaoLoginModel() { Login = "rsinfo", Senha = "senha123" };
        var x = UsuarioService.ObterToken(model);
        RetornoBaseModel retornoService = await UsuarioService.ObterToken(model);
        string token = "";

        if (retornoService.Codigo != ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            mensagem = retornoService.Mensagem;
            return;
        }
        else
        {
            ///Limpando a mensagem
            token = retornoService.Mensagem;
            mensagem = "";
        }


        retornoService = await MovimentacaoInvestimentoService.ExcluirMovimentacao(token, Id);

        if (retornoService.Codigo != ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            mensagem = retornoService.Mensagem;
            return;
        }

        Navigation.NavigateTo("/meta");
    }
}
