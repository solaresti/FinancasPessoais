@page "/investimento/incluir"
@using ApiFinancas.Models
@using AppFinancas.Models
@inject NavigationManager Navigation
@inject ProtectedSessionStorage sessionStorage
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Investimento</PageTitle>

<h1>Novo investimento</h1>

@if (mensagem != string.Empty)
{
    <label class="text text-danger">@mensagem</label>
}



<EditForm Model="@investimentoModel" OnValidSubmit="Gravar">
    <DataAnnotationsValidator />
    @* <ValidationSummary/> *@

    <div class="mb-3">
        <label class="form-label">Nome</label>
        <InputText @bind-Value="investimentoModel.Nome" class="form-control"></InputText>
        <ValidationMessage For="@(() => investimentoModel.Nome)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Vencimento</label>
        <InputDate @bind-Value="investimentoModel.Vencimento" class="form-control"></InputDate>
    </div>

    <div class="mb-3">
        <label class="form-label">Categoria</label>
        <InputSelect @bind-Value="investimentoModel.Categoria" class="form-control">
            @foreach (var categoria in ListaCategorias)
            {
                <option value="@categoria.Value">
                    @categoria.Key
                </option>
            }
        </InputSelect>
    </div>

    <div class="mb-3">
        <label class="form-label">Risco</label>
        <InputSelect @bind-Value="investimentoModel.Risco" class="form-control">
            @foreach (var risco in ListaRisco)
            {
                <option value="@risco.Value">
                    @risco.Key
                </option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Gravar</button>
    <a href="/investimento" class="btn btn-default">Cancelar</a>
</EditForm>

@* <p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button> *@

@code {
     /// <summary>
    /// Dados da seção do usuário
    /// </summary>
    SessionModel sessionModel = new SessionModel();

    public InvestimentoModel investimentoModel { get; set; } = new();
    public string mensagem { get; set; }

    public Dictionary<string, string> ListaCategorias { get; set; } = new Dictionary<string, string>();
    public Dictionary<string, string> ListaRisco { get; set; } = new Dictionary<string, string>();


    protected override async Task OnInitializedAsync()
    {
        investimentoModel = new InvestimentoModel(); /* { Categoria = 1, Risco = 1, Nome = "", Vencimento = DateTime.Today.AddYears(1) }; */

        ListaCategorias.Add("Renda Fixa", "1");
        ListaCategorias.Add("Renda Variável", "2");
        ListaCategorias.Add("Cambial", "3");
        ListaCategorias.Add("Criptomoeda", "4");
        ListaCategorias.Add("Multimercado", "5");

        ListaRisco.Add("Baixo", "1");
        ListaRisco.Add("Médio", "2");
        ListaRisco.Add("Alto", "3");


        // flagProcessamento = true;
        // await base.OnInitializedAsync();

        // var conteudoSessionStorage = await sessionStorage.GetAsync<SessionModel>("sessionModel");

        // if (conteudoSessionStorage.Value == null)
        // {
        //     sessionModel = new SessionModel();
        // }
        // else
        // {
        //     sessionModel = conteudoSessionStorage.Value;

        //     var retornoService = await usuarioService.ObterListaFiliais(sessionModel.Token);
        //     if (retornoService.Retorno == "Ok")
        //     {
        //         listaFiliais = retornoService.Entidades;
        //     }
        // }

        // if (string.IsNullOrWhiteSpace(sessionModel.Token))
        // {
        //     _navigationManager.NavigateTo("/Index");
        // }
        // flagProcessamento = false;
    }

    public async Task Gravar()
    {

        mensagem = "";
        // ---------------------------------------------------------------------------------------
        // Verificando se o login já foi efetuado
        var conteudoSessionStorage = await sessionStorage.GetAsync<SessionModel>("sessionModel");
        if (conteudoSessionStorage.Value == null)
        {
            sessionModel = new SessionModel();
        }
        else
        {
            sessionModel = conteudoSessionStorage.Value;
        }

        if (string.IsNullOrWhiteSpace(sessionModel.Token))
        {
            navigationManager.NavigateTo("/", true);
        }
        // ---------------------------------------------------------------------------------------

        RetornoEntidadeModel<InvestimentoModel> retornoInclusao = await InvestimentoService.IncluirOuAlterarInvestimento(sessionModel.Token, investimentoModel, flagInclusao: true);

        if (retornoInclusao.Codigo != ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            mensagem = retornoInclusao.Mensagem;
            return;
        }

        Navigation.NavigateTo("/investimento");

    }

    // private int currentCount = 0;

    // private void IncrementCount()
    // {
    //     currentCount++;
    // }
}
