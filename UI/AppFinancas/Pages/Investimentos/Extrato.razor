@page "/investimento/extrato/{id:int}/{nomeInvestimento}"
@using AppFinancas.Models
@rendermode InteractiveServer

<PageTitle>Metas</PageTitle>

<h1>Extrato de: @NomeInvestimento</h1>

<table class="table">
    <thead>
        <tr>
            <th>Data</th>
            <th>Meta</th>
            <th><div align="right">Valor</div></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var movimentacao in ListaMovimentacoes)
        {
            <tr>
                <td>@movimentacao.Data.ToString("dd/MM/yyyy")</td>
                <td>@movimentacao.Nome</td>
                <td align="right">@movimentacao.Valor.ToString("C")</td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <th scope="row">Total</th>
            <th></th>
            <td><div align="right">@ValorTotal.ToString("C")</div></td>
        </tr>
    </tfoot>

</table>

<a href="/movimentacao/create" class="btn btn-primary">Incluir lançamento</a>
<a href="/investimento" class="btn btn-default">Voltar</a>

<br />

@if (mensagem != string.Empty)
{
    <label class="text text-info">@mensagem</label>
}
@* <p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button> *@

@code {

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string NomeInvestimento { get; set; }

    string mensagem = "Carregando dados...";
    float ValorTotal { get; set; } = 0;
    List<ExtratoModel> ListaMovimentacoes { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        RequisicaoLoginModel model = new RequisicaoLoginModel() { Login = "rsinfo", Senha = "senha123" };
        var x = UsuarioService.ObterToken(model);
        RetornoBaseModel retornoService = await UsuarioService.ObterToken(model);
        string token = "";

        if (retornoService.Codigo != ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            mensagem = retornoService.Mensagem;
            return;
        }
        else
        {
            ///Limpando a mensagem
            token = retornoService.Mensagem;
            mensagem = "";
        }

        RetornoListaEntidadesModel<ExtratoModel> retornoApi = await MovimentacaoInvestimentoService.ObterExtratoPorInvestimento(token, Id);

        if (retornoApi.Codigo == ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            ListaMovimentacoes = retornoApi.ListaEntidades;
            ValorTotal = retornoApi.ListaEntidades.Sum(lancamento => lancamento.Valor);
        }

    }

   
}
