@page "/investimento/excluir/{id:int}/{nome}"
@inject NavigationManager Navigation 
@rendermode InteractiveServer 
@inject ProtectedSessionStorage sessionStorage
@inject NavigationManager navigationManager

<PageTitle>Investimentos</PageTitle>

<h2>Confirmação da exclusão</h2>
<h5> Tem certeza de que deseja excluir o investimento <strong>@Nome</strong> e todas as suas movimentações?</h5>

<div>
<button class="btn btn-danger" @onclick="ConfirmarExclusao">Excluir</button>
<a onclick="history.back()" class="btn btn-default">Cancelar</a>
</div>
<br />
@if (mensagem != string.Empty)
{
    <label class="text text-danger">@mensagem</label>
}

@code {
    public string mensagem { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public string Nome { get; set; }

    /// <summary>
    /// Dados da seção do usuário
    /// </summary>
    SessionModel sessionModel = new SessionModel();



    public async Task ConfirmarExclusao()
    {
        mensagem = "";
        // ---------------------------------------------------------------------------------------
        // Verificando se o login já foi efetuado
        var conteudoSessionStorage = await sessionStorage.GetAsync<SessionModel>("sessionModel");
        if (conteudoSessionStorage.Value == null)
        {
            sessionModel = new SessionModel();
        }
        else
        {
            sessionModel = conteudoSessionStorage.Value;
        }

        if (string.IsNullOrWhiteSpace(sessionModel.Token))
        {
            navigationManager.NavigateTo("/", true);
        }
        // ---------------------------------------------------------------------------------------


        RetornoBaseModel retornoService = await InvestimentoService.ExcluirInvestimento(sessionModel.Token, Id);

        if (retornoService.Codigo != ApiFinancas.Enums.CodigosRetornoEnum.Sucesso)
        {
            mensagem = retornoService.Mensagem;
            return;
        }

        Navigation.NavigateTo("/investimento");
    }
}
